<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->

<mapper namespace="com.change.mybatis.mapper.OrderMapper">
	<!-- id:statement的id或者叫做sql的id -->
	<!-- parameterType:声明输入参数的类型 -->
	<!-- resultType:声明输出结果的类型，应该填写pojo的全路径 -->
	<!-- #{}:输入参数的占位符，相当于jdbc的？ -->
	<resultMap id="mapId" type="Orders">
		<result column = "user_id" property="userId"/>
	</resultMap>
	<select id="selectByOrder" resultMap = "mapId">
		SELECT id, user_id, number, createtime, note FROM `orders`
	</select>
	
	<resultMap type="Orders" id="orderUserResultMap">
		<id property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="number" column="number" />
		<result property="createtime" column="createtime" />
		<result property="note" column="note" />
	
		<!-- association ：配置一对一属性 -->
		<!-- property:order里面的User属性名 -->
		<!-- javaType:属性类型 -->
		<association property="user" javaType="user">
			<!-- id:声明主键，表示user_id是关联查询对象的唯一标识-->
			<id property="id" column="user_id" />
			<result property="username" column="username" />
			<result property="address" column="address" />
		</association>
	
	</resultMap>

	<!-- 一对一关联，查询订单，订单内部包含用户属性 -->
	<select id="queryOrderUserResultMap" resultMap="orderUserResultMap">
		SELECT
		o.id,
		o.user_id,
		o.number,
		o.createtime,
		o.note,
		u.username,
		u.address
		FROM
		`orders` o
		LEFT JOIN `user` u ON o.user_id = u.id
	</select>
</mapper>